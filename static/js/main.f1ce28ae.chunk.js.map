{"version":3,"sources":["Helpers/Contexts.js","Component/MainMenu.js","Helpers/QuestionBank.js","Component/Quiz.js","Component/EndScreen.js","App.js","index.js"],"names":["QuizContext","createContext","MainMenu","useContext","setGameState","gameState","className","id","onClick","Questions","promp","optionA","optionB","optionC","optionD","answer","Quiz","score","setScore","useState","CurrQuestion","setCurrQuestion","optionChoosen","setOptionChoosen","length","EndScreen","App","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"mJAEaA,G,KAAcC,2BCgBZC,MAdf,WAAqB,IAAD,EACkBC,qBAAWH,GAA3BI,GADF,EACTC,UADS,EACED,cAElB,OACI,qBAAKE,UAAY,OAAjB,SACI,wBAAQC,GAAG,QACfC,QAAW,WAAOJ,EAAa,SAD3B,2BCTCK,EAAY,CACrB,CACIC,MAAO,eACPC,QAAS,KACTC,QAAS,IACTC,QAAS,KACTC,QAAS,KACTC,OAAQ,KAGZ,CACIL,MAAO,8CACPC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,OAAQ,KAEZ,CACIL,MAAO,+BACPC,QAAS,UACTC,QAAS,WACTC,QAAS,SACTC,QAAS,YACTC,OAAQ,KAEZ,CACIL,MAAO,qCACPC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,OAAQ,KAGZ,CACIL,MAAO,0CACPC,QAAS,aACTC,QAAS,aACTC,QAAS,aACTC,QAAS,aACTC,OAAQ,MCSDC,MA9Cf,WAAiB,IAAD,EAE4Bb,qBAAWH,GAA5CiB,EAFK,EAELA,MAAOC,EAFF,EAEEA,SAAUd,EAFZ,EAEYA,aAFZ,EAG4Be,mBAAS,GAHrC,mBAGLC,EAHK,KAGSC,EAHT,OAI8BF,mBAAS,IAJvC,mBAILG,EAJK,KAIUC,EAJV,KAmBZ,OACI,sBAAKjB,UAAY,OAAjB,UACI,6BAAKG,EAAUW,GAAcV,QAC7B,sBAAKJ,UAAY,UAAjB,UACI,wBAAQE,QAAU,kBAAMe,EAAiB,MAAzC,SACKd,EAAUW,GAAcT,UAE7B,wBAAQH,QAAU,kBAAMe,EAAiB,MAAzC,SACKd,EAAUW,GAAcR,UAE7B,wBAAQJ,QAAU,kBAAMe,EAAiB,MAAzC,SACKd,EAAUW,GAAcP,UAE7B,wBAAQL,QAAU,kBAAMe,EAAiB,MAAzC,SACKd,EAAUW,GAAcN,aAIhCM,GAAgBX,EAAUe,OAAS,EAChC,wBAAQjB,GAAI,UAAUC,QAzBb,WACdC,EAAUW,GAAcL,QAAUO,GACjCJ,EAASD,EAAQ,GAErBb,EAAa,cAqBL,6BAEA,wBAAQG,GAAI,UAAUC,QAlCb,WACdC,EAAUW,GAAcL,QAAUO,GACjCJ,EAASD,EAAQ,GAErBI,EAAgBD,EAAe,IA8BvB,iCCvBDK,MAhBf,WAAsB,IAAD,EAEuBtB,qBAAWH,GAA5CiB,EAFU,EAEVA,MAAOC,EAFG,EAEHA,SAAUd,EAFP,EAEOA,aAMxB,OACI,sBAAKE,UAAY,YAAjB,UACI,+CACA,+BAAKW,EAAL,MAAeR,EAAUe,UACzB,wBAAQhB,QATI,WAChBU,EAAS,GACTd,EAAa,SAOT,8BCMGsB,MAhBf,WAAgB,IAAD,EAEqBP,mBAAS,QAF9B,mBAENd,EAFM,KAEKD,EAFL,OAGae,mBAAS,GAHtB,mBAGNF,EAHM,KAGCC,EAHD,KAIb,OACE,sBAAKZ,UAAU,MAAf,UACE,0CACA,eAACN,EAAY2B,SAAb,CAAsBC,MAAS,CAACvB,YAAWD,eAAca,QAAOC,YAAhE,UACmB,SAAdb,GAAwB,cAAC,EAAD,IACV,SAAdA,GAAwB,cAAC,EAAD,IACV,cAAdA,GAA6B,cAAC,EAAD,WCZxCwB,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f1ce28ae.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const QuizContext = createContext();","import React, {useContext} from 'react'\r\nimport { QuizContext } from \"../Helpers/Contexts\";\r\nimport '../App.css';\r\n\r\nfunction MainMenu() {\r\n    const {gameState, setGameState} = useContext(QuizContext);\r\n\r\n    return (\r\n        <div className = \"menu\">\r\n            <button id=\"start\"\r\n        onClick = {() => {setGameState(\"quiz\");  \r\n        }}\r\n        >Start Quiz</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu\r\n","export const Questions = [\r\n    {\r\n        promp: \"what is 1+3?\",\r\n        optionA: \"30\",\r\n        optionB: \"4\",\r\n        optionC: \"39\",\r\n        optionD: \"33\",\r\n        answer: \"B\",\r\n    },\r\n\r\n    {\r\n        promp: \"How many cards are there in a playing deck?\",\r\n        optionA: \"52 cards\",\r\n        optionB: \"50 cards\",\r\n        optionC: \"39 cards\",\r\n        optionD: \"33 cards\",\r\n        answer: \"A\",\r\n    },\r\n    {\r\n        promp: \"which is streaming platform?\",\r\n        optionA: \"twitter\",\r\n        optionB: \"facebook\",\r\n        optionC: \"twitch\",\r\n        optionD: \"instagram\",\r\n        answer: \"C\",\r\n    },\r\n    {\r\n        promp: \"How many hours are there in a day?\",\r\n        optionA: \"20 hours\",\r\n        optionB: \"34 hours\",\r\n        optionC: \"24 hours\",\r\n        optionD: \"23 hours\",\r\n        answer: \"C\",\r\n    },\r\n    \r\n    {\r\n        promp: \" How many minutes are there in an hour?\",\r\n        optionA: \"60 minutes\",\r\n        optionB: \"64 minutes\",\r\n        optionC: \"54 minutes\",\r\n        optionD: \"34 minutes\",\r\n        answer: \"A\",\r\n    },\r\n    \r\n];","import { useState,useContext } from 'react';\r\nimport {QuizContext} from '../Helpers/Contexts';\r\nimport { Questions } from \"../Helpers/QuestionBank\";\r\nimport '../App.css';\r\nfunction Quiz() {\r\n\r\n    const {score, setScore, setGameState} = useContext(QuizContext);\r\n    const [CurrQuestion, setCurrQuestion] = useState(0);\r\n    const [optionChoosen, setOptionChoosen] = useState(\"\");\r\n\r\n    const nextQuestion = () => {\r\n        if(Questions[CurrQuestion].answer == optionChoosen){\r\n            setScore(score + 1);\r\n        }\r\n        setCurrQuestion(CurrQuestion + 1);\r\n    };\r\n\r\n    const finishedQuiz = () =>{\r\n        if(Questions[CurrQuestion].answer == optionChoosen){\r\n            setScore(score + 1);\r\n        }\r\n        setGameState(\"endscreen\");\r\n    }\r\n    return (\r\n        <div className = \"quiz\">\r\n            <h1>{Questions[CurrQuestion].promp}</h1>\r\n            <div className = \"options\">\r\n                <button onClick ={() => setOptionChoosen(\"A\")}> \r\n                    {Questions[CurrQuestion].optionA} \r\n                </button>\r\n                <button onClick ={() => setOptionChoosen(\"B\")}>\r\n                    {Questions[CurrQuestion].optionB}\r\n                </button>\r\n                <button onClick ={() => setOptionChoosen(\"C\")}>\r\n                    {Questions[CurrQuestion].optionC} \r\n                </button>\r\n                <button onClick ={() => setOptionChoosen(\"D\")}> \r\n                    {Questions[CurrQuestion].optionD} \r\n                </button>\r\n            </div>\r\n            \r\n            {CurrQuestion == Questions.length - 1 ? (\r\n                <button id= \"btn_div\" onClick ={finishedQuiz}> Finished Quiz </button>\r\n            ):(\r\n                <button id= \"btn_div\" onClick ={nextQuestion}> Next Question </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz;\r\n","import React, {useContext} from 'react'\r\nimport { QuizContext } from \"../Helpers/Contexts\";\r\nimport { Questions } from '../Helpers/QuestionBank';\r\nimport '../App.css';\r\n\r\nfunction EndScreen() {\r\n\r\n    const {score, setScore, setGameState} = useContext(QuizContext);\r\n    const restartQuiz = () =>{\r\n        setScore(0);\r\n        setGameState(\"menu\");\r\n    };\r\n\r\n    return (\r\n        <div className = \"endScreen\">\r\n            <h1>Quiz Finished</h1>\r\n            <h3>{score} / {Questions.length}</h3>\r\n            <button onClick = {restartQuiz}>Restart Quiz</button>\r\n        </div>\r\n    )\r\n}\r\nexport default EndScreen;\r\n","import { useState, useContext } from 'react';\nimport './App.css';\nimport MainMenu from './Component/MainMenu';\nimport Quiz from './Component/Quiz';\nimport EndScreen from './Component/EndScreen';\nimport {QuizContext} from './Helpers/Contexts';\n\nfunction App() {\n\n  const [gameState, setGameState] = useState(\"menu\");\n  const [score, setScore] = useState(0);\n  return (\n    <div className=\"App\">\n      <h1>Quiz App</h1>\n      <QuizContext.Provider value = {{gameState, setGameState, score, setScore}}>\n          {gameState === \"menu\" && <MainMenu/>}\n          {gameState === \"quiz\" && <Quiz/>}\n          {gameState === \"endscreen\" && <EndScreen/>}\n      </QuizContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}